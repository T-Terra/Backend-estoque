name: Run Tests with Poetry and Pytest

on:
  workflow_dispatch:
  push:
    branches:
      - master  # Ou a branch que você deseja, por exemplo, 'develop'

jobs:
  test:
    runs-on: ubuntu-latest  # Usando Ubuntu como ambiente

    services:
      postgres:
        image: postgres:17  # Defina a versão do PostgreSQL desejada
        env:
          POSTGRES_DB: test_db  # Nome do banco de dados
          POSTGRES_USER: test_user  # Usuário do banco de dados
          POSTGRES_PASSWORD: test_password  # Senha do banco de dados
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12  # Defina a versão do Python que você está usando

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH  # Adicionando Poetry ao PATH

      - name: Install dependencies with Poetry
        run: poetry install --with dev --no-root
      

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U test_user; then
              echo "PostgreSQL is ready!"
              exit 0
            fi
            echo "Waiting for PostgreSQL..."
            sleep 3
          done
          echo "PostgreSQL did not become ready in time." >&2
          exit 1
            
      - name: Set up environment variables
        env:
          DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
        run: |
          echo "SIGNING_KEY=${{ secrets.SIGNING_KEY }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "CI=${{ secrets.CI }}" >> .env
      
      - name: Run migrations
        env:
          DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
        run: poetry run python manage.py migrate

      - name: Run tests with pytest
        env:
          DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
        run: poetry run pytest ./api/  # Executa os testes com pytest
