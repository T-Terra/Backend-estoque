name: Semantic Release

on:
  push:
    branches:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Obtém todas as tags para o versionamento correto

      - name: Configurar usuário do GitHub
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.TOKEN_REPO }}@github.com/T-Terra/Backend-estoque.git

      - name: Instalar Node.js (para semantic-release)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar Python e Poetry
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: pip install poetry

      - name: Instalar semantic-release
        run: npm install -g semantic-release @semantic-release/git @semantic-release/changelog @semantic-release/github @semantic-release/commit-analyzer @semantic-release/release-notes-generator

      - name: Calcular nova versão e criar release
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_REPO }}
          SEMANTIC_RELEASE_BRANCHES: '["master", "dev"]'  # Configurando as branches no GitHub Actions
          SEMANTIC_RELEASE_PLUGINS: '@semantic-release/commit-analyzer,@semantic-release/release-notes-generator,@semantic-release/changelog,@semantic-release/github,@semantic-release/git' 
        run: semantic-release --branches "$SEMANTIC_RELEASE_BRANCHES" --plugins "$SEMANTIC_RELEASE_PLUGINS"

      # - name: Atualizar versão no `pyproject.toml`
      #   run: |
      #     VERSION=$(git describe --tags --abbrev=0)
      #     poetry version ${VERSION#v}

      - name: Criar commit com nova versão
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          poetry version ${VERSION#v}
          git add pyproject.toml
          git commit -m "chore(release): Bump version to $(poetry version -s)"
          git push origin HEAD