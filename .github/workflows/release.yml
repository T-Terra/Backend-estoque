name: Semantic Release

on:
  push:
    branches:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Obtém todas as tags para o versionamento correto

      - name: Configurar usuário do GitHub
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.TOKEN_REPO }}@github.com/T-Terra/Backend-estoque.git
      - name: Instalar Node.js (para semantic-release)
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar Python e Poetry
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - run: pip install poetry

      # Instalar o Standard Version
      - name: Instalar Standard Version
        run: npm install --save-dev standard-version

      # Rodar o Standard Version para gerar a nova versão e changelog
      - name: Gerar nova versão e changelog
        run: |
          npx standard-version
      
      # Criar commit com nova versão e changelog
      - name: Commit e push da nova versão e changelog
        run: |
          git add .
          git commit -m "chore(release): Bump version to $(git describe --tags --abbrev=0)"
          git push --follow-tags origin HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_REPO }}

      - name: Criar commit com nova versão
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          poetry version ${VERSION#v}
          git add pyproject.toml
          git commit -m "chore(release): Bump version to $(poetry version -s)"
          git push origin HEAD